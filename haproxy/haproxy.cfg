global
  stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
  log stdout format raw local0 info
  stats timeout 30s
	daemon

defaults
  mode                    http
	option                  httplog
  # Valido apenas em HTTP, a opção vai permitir a transferência de uma sessão de servidor que começar a apresentar falhas de forma rápida
  option                  redispatch 
	log                     global
	#log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"
  timeout client          10s
  timeout connect         5s
  timeout server          10s 
  timeout http-request    10s
  maxconn                 3000

  

frontend stats
	no log
  bind *:8404
  stats enable
  stats uri /metrics
  stats refresh 10s
  stats show-legends
  stats admin if TRUE
  stats auth admin:admin

frontend web
  bind *:80
	option forwardfor
  
  # web-cookie
  acl is_cookie_host hdr(host) -i web-cookie.local
  use_backend web_cookie if is_cookie_host
  
  default_backend web
  
backend web
  #balance roundrobin
	option httpchk
	http-check send meth HEAD  uri /nginx_status
	http-check expect status 200
	#http-check expect string success
	server s1 nginxhost_1:80 check inter 10s downinter 2m fall 2 
	server s2 nginxhost_2:80 check inter 10s downinter 2m fall 2 
	server s3 nginxhost_3:80 check inter 10s downinter 2m fall 2 

backend nginx-web1
	      option httpchk
        http-request set-uri /
        http-check send meth HEAD  uri /nginx_status
        server s1 nginxhost_1:80 check 

backend nginx-web2
	      option httpchk
        http-request set-uri /
        server s2 nginxhost_2:80 track nginx-web1/s1

backend web_cookie
  cookie BACKENDUSED insert indirect nocache
	option httpchk
	http-check send meth HEAD  uri /nginx_status
	http-check expect status 200
	#http-check expect string success
	server s1 nginxhost_1:80 check inter 10s downinter 2m fall 2 cookie s1
	server s2 nginxhost_2:80 check inter 10s downinter 2m fall 2 cookie s2
	server s3 nginxhost_3:80 check inter 10s downinter 2m fall 2 cookie s3



# balancer para L4 - SQL ou outros serviços que não suportam L7 
# O proxy protocol precisa ser suportado no LB e Aplicação 
# frontend web-proxy-protocol
#   bind *:8181
#   mode tcp
#   default_backend web-proxy-protocol

# backend web-proxy-protocol
#   balance roundrobin
# 	mode tcp
# 	server web1 nginxhost_1:80 check
